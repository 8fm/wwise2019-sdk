project(AkSoundEngine)

add_definitions(-DPROXYCENTRAL_CONNECTED -D__AVX2__)
if (MSVC)
    add_compile_options(/wd4251 /wd4250 /wd4355)
endif()

set(SRC_FILES
    "../AkMusicEngine/Common/AkMidiBaseCtx.cpp"
    "../AkMusicEngine/Common/AkMidiBaseMgr.cpp"
    "../AkMusicEngine/Common/AkMidiClipCtx.cpp"
    "../AkMusicEngine/Common/AkMidiClipMgr.cpp"
    "../AkMusicEngine/Common/AkMidiDeviceCtx.cpp"
    "../AkMusicEngine/Common/AkMidiDeviceMgr.cpp"
    "../AkMusicEngine/Common/AkMidiNoteCtx.cpp"
    "../AkMusicEngine/Common/AkMidiParseSe.cpp"
    "Common/ALBytesMem.cpp"
    "Common/Ak3DListener.cpp"
    "Common/AkAction.cpp"
    "Common/AkActionActive.cpp"
    "Common/AkActionBreak.cpp"
    "Common/AkActionBypassFX.cpp"
    "Common/AkActionDuck.cpp"
    "Common/AkActionEvent.cpp"
    "Common/AkActionExcept.cpp"
    "Common/AkActionMute.cpp"
    "Common/AkActionPause.cpp"
    "Common/AkActionPlay.cpp"
    "Common/AkActionPlayAndContinue.cpp"
    "Common/AkActionPlayEvent.cpp"
    "Common/AkActionRelease.cpp"
    "Common/AkActionResetPlaylist.cpp"
    "Common/AkActionResume.cpp"
    "Common/AkActionSeek.cpp"
    "Common/AkActionSetAkProp.cpp"
    "Common/AkActionSetGameParameter.cpp"
    "Common/AkActionSetState.cpp"
    "Common/AkActionSetSwitch.cpp"
    "Common/AkActionSetValue.cpp"
    "Common/AkActionStop.cpp"
    "Common/AkActionTrigger.cpp"
    "Common/AkActionUseState.cpp"
    "Common/AkActorMixer.cpp"
    "Common/AkAttenuationMgr.cpp"
    "Common/AkAudioLib.cpp"
    "Common/AkAudioLibIndex.cpp"
    "Common/AkAudioLibTimer.cpp"
    "Common/AkAudioMgr.cpp"
    "Common/AkAudioMix.cpp"
    "Common/AkAuxBus.cpp"
    "Common/AkBankCallbackMgr.cpp"
    "Common/AkBankList.cpp"
    "Common/AkBankMgr.cpp"
    "Common/AkBankReader.cpp"
    "Common/AkBehavioralCtx.cpp"
    "Common/AkBus.cpp"
    "Common/AkBusCallbackMgr.cpp"
    "Common/AkBusCtx.cpp"
    "Common/AkBytesCount.cpp"
    "Common/AkBytesMem.cpp"
    "Common/AkCaptureMgr.cpp"
    "Common/AkChunkRing.cpp"
    "Common/AkCommon.cpp"
    "Common/AkConnectedListeners.cpp"
    "Common/AkContainerBase.cpp"
    "Common/AkContinuationList.cpp"
    "Common/AkContinuousPBI.cpp"
    "Common/AkCustomPluginDataStore.cpp"
    "Common/AkDecisionTree.cpp"
    "Common/AkDialogueEvent.cpp"
    "Common/AkDuckItem.cpp"
    "Common/AkDynamicSequence.cpp"
    "Common/AkDynamicSequencePBI.cpp"
    "Common/AkEffectsMgr.cpp"
    "Common/AkEnvironmentsMgr.cpp"
    "Common/AkEvent.cpp"
    "Common/AkFXContext.cpp"
    "Common/AkFXMemAlloc.cpp"
    "Common/AkFileParserBase.cpp"
    "Common/AkFxBase.cpp"
    "Common/AkFxBaseStateAware.cpp"
    "Common/AkGameObject.cpp"
    "Common/AkGen3DParams.cpp"
    "Common/AkIDStringMap.cpp"
    "Common/AkIndexable.cpp"
    "Common/AkLEngineCmds.cpp"
    "Common/AkLEngine_Common.cpp"
    "Common/AkLayer.cpp"
    "Common/AkLayerCntr.cpp"
    "Common/AkMarkers.cpp"
    "Common/AkMath.cpp"
    "Common/AkMixBusCtx.cpp"
    "Common/AkMixConnection.cpp"
    "Common/AkModulator.cpp"
    "Common/AkModulatorCtx.cpp"
    "Common/AkModulatorEngine.cpp"
    "Common/AkModulatorMgr.cpp"
    "Common/AkModulatorPBIData.cpp"
    "Common/AkMonitor.cpp"
    "Common/AkMultiPlayNode.cpp"
    "Common/AkOutputMgr.cpp"
    "Common/AkPBI.cpp"
    "Common/AkPBIAware.cpp"
    "Common/AkParamNodeStateAware.cpp"
    "Common/AkParameterNode.cpp"
    "Common/AkParameterNodeBase.cpp"
    "Common/AkPath.cpp"
    "Common/AkPathManager.cpp"
    "Common/AkPlayingMgr.cpp"
    "Common/AkPlaylist.cpp"
    "Common/AkPositionRepository.cpp"
    "Common/AkPreparationAware.cpp"
    "Common/AkProfile.cpp"
    "Common/AkQueryParameters.cpp"
    "Common/AkRTPCMgr.cpp"
    "Common/AkRTPCSubscriber.cpp"
    "Common/AkRanSeqBaseInfo.cpp"
    "Common/AkRanSeqCntr.cpp"
    "Common/AkRegisteredObj.cpp"
    "Common/AkRegistryMgr.cpp"
    "Common/AkRuntimeEnvironmentMgr.cpp"
    "Common/AkSIS.cpp"
    "Common/AkScopedRtpcObj.cpp"
    "Common/AkSettings.cpp"
    "Common/AkSinkBase.cpp"
    "Common/AkSound.cpp"
    "Common/AkSoundBase.cpp"
    "Common/AkSource.cpp"
    "Common/AkSpatialAudioComponent.cpp"
    "Common/AkSpatialAudioVoice.cpp"
    "Common/AkSpeakerPan.cpp"
    "Common/AkSrcMedia.cpp"
    "Common/AkSrcMediaCodecPCM.cpp"
    "Common/AkSrcMediaHelpers.cpp"
    "Common/AkSrcMediaStream.cpp"
    "Common/AkState.cpp"
    "Common/AkStateAware.cpp"
    "Common/AkStateMgr.cpp"
    "Common/AkStreamCacheMgmt.cpp"
    "Common/AkSwitchAware.cpp"
    "Common/AkSwitchCntr.cpp"
    "Common/AkSwitchMgr.cpp"
    "Common/AkThreadedBankMgr.cpp"
    "Common/AkTransition.cpp"
    "Common/AkTransitionManager.cpp"
    "Common/AkURenderer.cpp"
    "Common/AkVBAP.cpp"
    "Common/AkVirtualAcousticsManager.cpp"
    "Common/BGMSinkParams.cpp"
    "Common/FileCaptureWriter.cpp"
    "SoftwarePipeline/AVX2/AkResamplerAVX2.cpp"
    "SoftwarePipeline/AkADPCMCodec.cpp"
    "SoftwarePipeline/AkLEngine_SoftwarePipeline.cpp"
    "SoftwarePipeline/AkLPFCommon.cpp"
    "SoftwarePipeline/AkMixer.cpp"
    "SoftwarePipeline/AkMixerCommon.cpp"
    "SoftwarePipeline/AkMixerSIMD.cpp"
    "SoftwarePipeline/AkResampler.cpp"
    "SoftwarePipeline/AkResamplerCommon.cpp"
    "SoftwarePipeline/AkResamplerSIMD.cpp"
    "SoftwarePipeline/AkSrcBase.cpp"
    "SoftwarePipeline/AkSrcFileADPCM.cpp"
    "SoftwarePipeline/AkSrcFileBase.cpp"
    "SoftwarePipeline/AkSrcLpFilter.cpp"
    "SoftwarePipeline/AkSrcPhysModel.cpp"
    "SoftwarePipeline/AkVPL3dMixable.cpp"
    "SoftwarePipeline/AkVPLFilterNode.cpp"
    "SoftwarePipeline/AkVPLFilterNodeBase.cpp"
    "SoftwarePipeline/AkVPLFilterNodeOutOfPlace.cpp"
    "SoftwarePipeline/AkVPLLPFNode.cpp"
    "SoftwarePipeline/AkVPLMixBusNode.cpp"
    "SoftwarePipeline/AkVPLNode.cpp"
    "SoftwarePipeline/AkVPLPitchNode.cpp"
    "SoftwarePipeline/AkVPLSrcCbxNode.cpp"
    "SoftwarePipeline/AkVPLSrcNode.cpp"
    "SoftwarePipeline/AkVPLVolAutmNode.cpp"
    "SoftwarePipeline/PtADPCM_Decode.cpp"
)
if (NOT ${GAME_CONFIG} STREQUAL "Final")
    list(APPEND SRC_FILES
        "../SoundEngineProxy/Common/ALMonitorProxyLocal.cpp"
        "../SoundEngineProxy/Common/ActionProxyLocal.cpp"
        "../SoundEngineProxy/Common/ActorMixerProxyLocal.cpp"
        "../SoundEngineProxy/Common/AttenuationProxyLocal.cpp"
        "../SoundEngineProxy/Common/AuxBusProxyLocal.cpp"
        "../SoundEngineProxy/Common/BusProxyLocal.cpp"
        "../SoundEngineProxy/Common/CommandData.cpp"
        "../SoundEngineProxy/Common/CommandDataSerializer.cpp"
        "../SoundEngineProxy/Common/DialogueEventProxyLocal.cpp"
        "../SoundEngineProxy/Common/EventProxyLocal.cpp"
        "../SoundEngineProxy/Common/FxBaseProxyLocal.cpp"
        "../SoundEngineProxy/Common/LayerContainerProxyLocal.cpp"
        "../SoundEngineProxy/Common/LayerProxyLocal.cpp"
        "../SoundEngineProxy/Common/MidiDeviceMgrProxyLocal.cpp"
        "../SoundEngineProxy/Common/ModulatorProxyLocal.cpp"
        "../SoundEngineProxy/Common/ObjectProxyLocal.cpp"
        "../SoundEngineProxy/Common/ParameterNodeProxyLocal.cpp"
        "../SoundEngineProxy/Common/ParameterableProxyLocal.cpp"
        "../SoundEngineProxy/Common/RanSeqContainerProxyLocal.cpp"
        "../SoundEngineProxy/Common/RendererProxyLocal.cpp"
        "../SoundEngineProxy/Common/SoundProxyLocal.cpp"
        "../SoundEngineProxy/Common/StateMgrProxyLocal.cpp"
        "../SoundEngineProxy/Common/StateProxyLocal.cpp"
        "../SoundEngineProxy/Common/SwitchContainerProxyLocal.cpp"
        "../SoundEngineProxy/Common/VirtualAcousticsProxyLocal.cpp"
        "../SoundEngineProxy/Remote/CodeBase/ALMonitorProxyConnected.cpp"
        "../SoundEngineProxy/Remote/CodeBase/ActionProxyConnected.cpp"
        "../SoundEngineProxy/Remote/CodeBase/ActorMixerProxyConnected.cpp"
        "../SoundEngineProxy/Remote/CodeBase/AttenuationProxyConnected.cpp"
        "../SoundEngineProxy/Remote/CodeBase/AuxBusProxyConnected.cpp"
        "../SoundEngineProxy/Remote/CodeBase/BaseBusConnected.cpp"
        "../SoundEngineProxy/Remote/CodeBase/BusProxyConnected.cpp"
        "../SoundEngineProxy/Remote/CodeBase/DialogueEventProxyConnected.cpp"
        "../SoundEngineProxy/Remote/CodeBase/EventProxyConnected.cpp"
        "../SoundEngineProxy/Remote/CodeBase/FxBaseProxyConnected.cpp"
        "../SoundEngineProxy/Remote/CodeBase/LayerContainerProxyConnected.cpp"
        "../SoundEngineProxy/Remote/CodeBase/LayerProxyConnected.cpp"
        "../SoundEngineProxy/Remote/CodeBase/MidiDeviceMgrProxyConnected.cpp"
        "../SoundEngineProxy/Remote/CodeBase/ModulatorProxyConnected.cpp"
        "../SoundEngineProxy/Remote/CodeBase/ObjectProxyConnected.cpp"
        "../SoundEngineProxy/Remote/CodeBase/ParameterNodeProxyConnected.cpp"
        "../SoundEngineProxy/Remote/CodeBase/ParameterableProxyConnected.cpp"
        "../SoundEngineProxy/Remote/CodeBase/ProxyFrameworkConnected.cpp"
        "../SoundEngineProxy/Remote/CodeBase/RanSeqContainerProxyConnected.cpp"
        "../SoundEngineProxy/Remote/CodeBase/RendererProxyConnected.cpp"
        "../SoundEngineProxy/Remote/CodeBase/SoundProxyConnected.cpp"
        "../SoundEngineProxy/Remote/CodeBase/StateMgrProxyConnected.cpp"
        "../SoundEngineProxy/Remote/CodeBase/StateProxyConnected.cpp"
        "../SoundEngineProxy/Remote/CodeBase/SwitchContainerProxyConnected.cpp"
        "../SoundEngineProxy/Remote/CodeBase/VirtualAcousticsProxyConnected.cpp"
    )
endif()
if (WIN32)
    set(STDAFX_H "Win32/stdafx.h")
    set(SYSTEM_INC "Win32")
    list(APPEND SRC_FILES
        "Win32/AkAudioThread.cpp"
        "Win32/AkLEngine.cpp"
        "Win32/AkSink.cpp"
        "Win32/AkSinkDirectSound.cpp"
        "Win32/AkSinkWasapi.cpp"
        "Win32/AkSinkXAudio2.cpp"
        "Win32/AkTls.cpp"
        "Win32/stdafx.cpp"
    )
else()
    set(STDAFX_H "Linux/stdafx.h")
    set(SYSTEM_INC "Linux" "POSIX")
    list(APPEND SRC_FILES
        "Linux/stdafx.cpp"
        "POSIX/AkAudioThread.cpp"
    )
endif()

add_library(${PROJECT_NAME} STATIC ${SRC_FILES})

target_include_directories(${PROJECT_NAME} PRIVATE
    ${SYSTEM_INC}
    "../../../../dxsdk\(June2010\)/Include"
    "../../../include"
    "SoftwarePipeline"
    "Common"
    "../AkMusicEngine/Common"
    "../SoundEngineProxy/Common"
    "../SoundEngineProxy/Remote/CodeBase"
    "../Communication/Remote/CodeBase"
    "../Plugins/Effects/Common"
    "../Plugins/Common"
    "Motion"
)

target_link_libraries(${PROJECT_NAME})

target_precompile_headers(${PROJECT_NAME}
    PRIVATE
    ${STDAFX_H}
)
